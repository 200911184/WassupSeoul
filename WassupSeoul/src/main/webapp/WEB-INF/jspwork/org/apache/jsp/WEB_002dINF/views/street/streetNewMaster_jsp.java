/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-03-25 07:48:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.street;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class streetNewMaster_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1582162448499L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/WassupSeoul/WassupSeoul/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>골목 삭제</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 골목 네비바 여백 -->\r\n");
      out.write("\t<div class=\"container-fluid\" style=\"margin-top: 57px;\">\r\n");
      out.write("\t\t<div class=\"row\" style=\"padding: 0px; height: 44px\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 고정된 골목 네비바  -->\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../street/streetDetail/streetNav.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 고정된 헤더 -->\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 컨텐츠영역-->\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../street/streetDetail/streetSide.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 사이드1 여백 -->\r\n");
      out.write("\t\t\t<div class=\"col-md-4\" id=\"devideArea\"></div>\r\n");
      out.write("\t\t\t<!-- 사이드1 여백 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"col-md-4\" id=\"devideArea\" style=\"margin-top: 10px;\">\r\n");
      out.write("\t\t\t\t<form method=\"POST\"\r\n");
      out.write("\t\t\t\t\taction=\"deleteStreet?no=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${streetNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&imgNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t\t\t\tenctype=\"multipart/form-data\" role=\"form\" onsubmit=\"\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t\t<!-- 골목 삭제 -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<h1 class=\"nanum\">골목 삭제하기</h1>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 class=\"nanum\">골목대장 위임하기</h3>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 nanum form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input class=\"form-control nanum\" type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"주민 닉네임\" id=\"juminNickName\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-2 nanum form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"nanum btn btn-primary\" type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"juminSearch\">검색</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-12 nanum form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"col-form-label\" for=\"newLeader\">새로운 골목대장</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;&nbsp; \r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 nanum form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"newLeader\" name=\"newLeader\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"form-control nanum\" type=\"text\" readonly\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"지정된 골목대장 닉네임\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-2 nanum form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"nanum btn btn-primary\" type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"yesMaster\">위임</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-12 nanum\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5 class=\"nanum\">골목 탈퇴*삭제하기</h5>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table class=\"table table-hover nanum\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"text-align: center; line-height: 50px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>골목탈퇴</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<td><button type=\"button\" class=\"btn btn-warning nanum\">골목탈퇴</button></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>골목삭제</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<td><button type=\"button\" class=\"btn btn-danger nanum\">골목삭제</button></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div style=\"display: inline-block;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary nanum\" type=\"button\">나가기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 사이드2 여백 -->\r\n");
      out.write("\t\t\t<div class=\"col-md-4\" id=\"devideArea\"></div>\r\n");
      out.write("\t\t\t<!-- 사이드2 여백 -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(\"#juminSearch\").on(\"click\", function() {\r\n");
      out.write("\t\t\tvar $juminNickName = $(\"#juminNickName\");\r\n");
      out.write("\t\t\tvar $streetNo = $\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tstreetNo\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t;\r\n");
      out.write("\t\t\tconsole.log(\"골목 번호 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${streetNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("\t\t\tvar $newLeader = $(\"#newLeader\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($juminNickName.val() == \"\") {\r\n");
      out.write("\t\t\t\talert(\"검색할 주민 닉네임을 입력하세요.\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"searchJumin\",\r\n");
      out.write("\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\tjuminNickName : $juminNickName.val(),\r\n");
      out.write("\t\t\t\t\t\tno : $streetNo\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t\tsuccess : function(jumin) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (jumin == null) {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"검색 결과가 없습니다. 닉네임을 다시 입력해주세요\");\r\n");
      out.write("\t\t\t\t\t\t\t$juminNickName.focus();\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t/* $jumin = jumin;\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"주민 : \" + $jumin); \r\n");
      out.write("\t\t\t\t\t\t\t지원아, jumin을  $jumin에 넣는다고 그대로 그 값이 들어가지 않아\r\n");
      out.write("\t\t\t\t\t\t\t가령 jumin.val()을 써야 한다던가 jumin.html()을 써야할\r\n");
      out.write("\t\t\t\t\t\t\t경우가 있기도 해. 근데 아무튼 지금은 그럴 필요가 없이\r\n");
      out.write("\t\t\t\t\t\t\t위처럼 console.log(jumin)으로 하면 다 데이터 받아와.\r\n");
      out.write("\t\t\t\t\t\t\t이후 화면 만드는건 알아서 하렴. 난 그건 좆도 못해서 나도 힘들단다.\r\n");
      out.write("\t\t\t\t\t\t\t(참고로 이거 승환이가 개고수임)*/\r\n");
      out.write("\t\t\t\t\t\t\t$newLeader.val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t$newLeader.val(jumin.memberNickname);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\terror : function(e) {\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"ajax 통신 실패\");\r\n");
      out.write("\t\t\t\t\t\tconsole.log(e);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#yesMaster\").on(\"click\", function(){\r\n");
      out.write("\t\t\t// 위임하기 위임 취소... \r\n");
      out.write("\t\t\tif($(\"#newLeader\").val()==\"\"){\r\n");
      out.write("\t\t\t\talert(\"위임할 주민을 검색해주세요.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
