/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-03-25 00:23:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.street.streetDetail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mapModal_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1582162448499L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/WassupSeoul/WassupSeoul/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/WassupSeoul/WassupSeoul/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/timeline.css\" type=\"text/css\">\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.3/handlebars.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<title>타임라인 글작성 영역</title>\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("\t #map {\n");
      out.write("        height: 100%;\n");
      out.write("      }\n");
      out.write("      /* Optional: Makes the sample page fill the window. */\n");
      out.write("      html, body {\n");
      out.write("        height: 100%;\n");
      out.write("        margin: 0;\n");
      out.write("        padding: 0;\n");
      out.write("      }\n");
      out.write("      #floating-panel {\n");
      out.write("        position: absolute;\n");
      out.write("        top: 180px;\n");
      out.write("        left: 25%;\n");
      out.write("        z-index: 5;\n");
      out.write("        background-color: #fff;\n");
      out.write("        padding: 5px;\n");
      out.write("        border: 1px solid #999;\n");
      out.write("        text-align: center;\n");
      out.write("        font-family: 'Roboto','sans-serif';\n");
      out.write("        line-height: 30px;\n");
      out.write("        padding-left: 10px;\n");
      out.write("      }\n");
      out.write(" </style>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<!-- 지도 모달 -->\n");
      out.write("\t\t\t\t\t<div class=\"modal fade\" id=\"mapModal\" data-backdrop=\"static\"\n");
      out.write("\t\t\t\t\t\ttabindex=\"-1\" role=\"dialog\" aria-labelledby=\"writerModalLabel\" aria-hidden=\"true\">\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-dialog\" role=\"document\" style=\"width: 50%;\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<h2 class=\"modal-title nanum\" id=\"checkMemModalLabel\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"font-weight: bold;\">지도 게시글 작성</h2>\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" id=\"mapCloseBtn\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\taria-label=\"Close\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- content start -->\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<textarea class=\" nanum\" id=\"mapPostArea\" rows=\"6\" placeholder=\"게시글내용을 입력하세요.\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"border: 1px solid black; color: black; font-size: 17px; height: 150px; width:100%\"></textarea>\n");
      out.write(" \t\t\t\t\t\t\t\t\t\n");
      out.write(" \t\t\t\t\t\t\t\t\t\t<div id=\"floating-panel\" style=\"width:50%\">\n");
      out.write("\t\t\t\t\t\t\t\t\t      <input id=\"address\" type=\"textbox\" value=\"광화문\" style=\"width:85%\">\n");
      out.write("\t\t\t\t\t\t\t\t\t      <input id=\"mapSubmit\" type=\"button\" value=\"검색\">\n");
      out.write("\t\t\t\t\t\t\t\t\t    </div>\n");
      out.write("\t\t\t\t\t\t\t\t\t    <div class=\"map_wrap\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div id=\"map\" style=\"width:100%;height:400px;position:relative;overflow:hidden;\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"mapSubmitBtn\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 10%; height: 30px; font-size: 17px; float: right; margin: 0px\">작성</button>\n");
      out.write("\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"modal_layer\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t \t\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- content end -->\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t <script>\n");
      out.write("\t\t\t\t      function initMap() {\n");
      out.write("\t\t\t\t        var map = new google.maps.Map(document.getElementById('map'), {\n");
      out.write("\t\t\t\t          zoom: 15,\n");
      out.write("\t\t\t\t          center: {lat: 37.5724723, lng: 126.9737442}\n");
      out.write("\t\t\t\t        });\n");
      out.write("\t\t\t\t        var geocoder = new google.maps.Geocoder();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t        document.getElementById('mapSubmit').addEventListener('click', function() {\n");
      out.write("\t\t\t\t          geocodeAddress(geocoder, map);\n");
      out.write("\t\t\t\t        });\n");
      out.write("\t\t\t\t      }\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t      function geocodeAddress(geocoder, resultsMap) {\n");
      out.write("\t\t\t\t        var address = document.getElementById('address').value;\n");
      out.write("\t\t\t\t        geocoder.geocode({'address': address}, function(results, status) {\n");
      out.write("\t\t\t\t          if (status === 'OK') {\n");
      out.write("\t\t\t\t        \t  var coords = results[0].geometry.location;\n");
      out.write("\t\t\t\t            \tresultsMap.setCenter(coords);\n");
      out.write("\t\t\t\t           \t var marker = new google.maps.Marker({\n");
      out.write("\t\t\t\t           \t\t   map: resultsMap,\n");
      out.write("\t\t\t\t             \t   position: coords\n");
      out.write("\t\t\t\t            });\n");
      out.write("\t\t\t\t          } else {\n");
      out.write("\t\t\t\t            alert('Geocode was not successful for the following reason: ' + status);\n");
      out.write("\t\t\t\t          }\n");
      out.write("\t\t\t\t        });\n");
      out.write("\t\t\t\t      }\n");
      out.write("\t\t\t\t    </script>\n");
      out.write("\t\t\t\t    \n");
      out.write("\t\t\t\t \t<script>\n");
      out.write("\t\t\t\t \t// 지도 게시글 업로드\n");
      out.write("\t\t\t\t \t  document.getElementById('mapSubmitBtn').addEventListener('click', function() {\n");
      out.write("\t\t\t\t \t\t var address = $(\"#address\").val();\n");
      out.write("\t\t\t\t\t\t\tvar mapPostContent = $(\"#mapPostArea\").val();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"사용자가 입력한 장소:\"+address);\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"개시글 입력내용:\"+mapPostContent);\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\turl : \"mapPost\",\n");
      out.write("\t\t\t\t\t\t\t\tdata : {\"address\" : address, \"mapPostContent\" : mapPostContent },\n");
      out.write("\t\t\t\t\t\t\t\ttype : \"post\",\n");
      out.write("\t\t\t\t\t\t\t\tsuccess : function(result) {\n");
      out.write("\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\tif (result == \"true\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t\talert(\"지도 업로드 성공\");\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#mapCloseBtn\").trigger(\"click\");\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\talert(\"지도 업로드 실패\");\n");
      out.write("\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\terror : function(e) {\n");
      out.write("\t\t\t\t\t\t\t\t\tconsole.log(\"ajax 통신 실패\");\n");
      out.write("\t\t\t\t\t\t\t\t\tconsole.log(e);\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t refreshList()\n");
      out.write("\t\t\t        });\n");
      out.write("\t\t\t\t \t\n");
      out.write("\t\t\t\t\t/* $(\".mapSubmitBtn\").click(function() {\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}); */\n");
      out.write("\t\t\t\t \t</script>\n");
      out.write("\t\t\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
