----------게시글 타입 추가--------------------
INSERT INTO BOARD_TYPE VALUES (0, 'NONE'); 
INSERT INTO BOARD_TYPE VALUES (1, '게시글파일'); 
INSERT INTO BOARD_TYPE VALUES (2, '일정'); 
INSERT INTO BOARD_TYPE VALUES (3, '투표'); 
INSERT INTO BOARD_TYPE VALUES (4, 'N빵'); 
INSERT INTO BOARD_TYPE VALUES (5, '스케치'); 
INSERT INTO BOARD_TYPE VALUES (6, '지도'); 

alter table thumb add unique(REPLY_NO);
 alter table thumb DROP unique(REPLY_NO);

COMMIT;


 ALTER TABLE thumb DROP COLUMN REREPLY_NO;


----------------------- V_BOARD 생성-----------------
CREATE VIEW V_BOARD AS
SELECT
BOARD_CONTENT,
BOARD_WRITE_DT,
BOARD_STATUS,
BOARD_LEVEL,
BOARD_NO,
STREET_NO,
M.MEMBER_NO,
TYPE_NO,
M.MEMBER_NICKNAME,
M.MEMBER_PROFILE_URL
FROM BOARD B
INNER JOIN MEMBER M
ON B.MEMBER_NO = M.MEMBER_NO
ORDER BY BOARD_NO;

COMMIT;

DROP VIEW V_BOARD;

----------------------- V_REPLY 생성-----------------
CREATE VIEW V_REPLY 
AS
SELECT
REPLY_NO,
REPLY_CONTENT,
REPLY_DT,
REPLY_STATUS,
REPLY_LEVEL,
R.BOARD_NO,
REREPLY_NO,
M.MEMBER_NO,
MEMBER_NICKNAME,
MEMBER_PROFILE_URL,
STREET_NO
FROM REPLY R
LEFT OUTER JOIN MEMBER M ON(M.MEMBER_NO=R.MEMBER_NO)
LEFT OUTER JOIN BOARD B ON(B.BOARD_NO=R.BOARD_NO)
ORDER BY BOARD_NO;

COMMIT;

DROP VIEW V_THUMB_COUNT;

----- 좋아요 테이블 댓글 넘버 추가-------
ALTER TABLE BOARD ADD(SKETCH_URL VARCHAR2(300) );
ALTER TABLE VOTE ADD(VOTE_OPTION VARCHAR2(700) );

DROP TABLE VOTE_PICK;

CREATE TABLE VOTE_PICK (
	VOTE_NO	NUMBER		NOT NULL,
	VOTE_CONTENT	VARCHAR2(50)		NOT NULL,
	BOARD_NO	NUMBER		NOT NULL
);

ALTER TABLE VOTE_PICK ADD CONSTRAINT PK_VOTE_PICK PRIMARY KEY (
	VOTE_NO
);

ALTER TABLE VOTE_PICK ADD CONSTRAINT FK_VOTE_TO_VOTE_PICK_1 FOREIGN KEY (
	BOARD_NO
)
REFERENCES VOTE (
	BOARD_NO
);

CREATE SEQUENCE SEQ_VOTE_PICK
START WITH 1
INCREMENT BY 1 
MAXVALUE 10000
NOCYCLE;
--------------------------

DROP TABLE VOTER;

CREATE TABLE VOTER (
	VOTE_NO	NUMBER		NOT NULL,
	MEMBER_NO	NUMBER		NOT NULL
);

ALTER TABLE VOTER ADD CONSTRAINT PK_VOTER PRIMARY KEY (
	VOTE_NO,
	MEMBER_NO
);

DROP TABLE VOTE;

CREATE TABLE VOTE (
	BOARD_NO	NUMBER		NOT NULL,
	VOTE_TITLE	VARCHAR2(50)		NOT NULL,
	VOTE_RESULT	VARCHAR2(50)		NULL,
	VOTE_ENROLL_DT	DATE	DEFAULT SYSDATE	NOT NULL,
	VOTE_END_DT	DATE		NULL,
	VOTE_DUP	CHAR(1)	DEFAULT 'Y' CHECK(VOTE_DUP IN ('Y', 'N', 2, 3, 4, 5))	NOT NULL,
    VOTE_OPTION VARCHAR2(700),
    VOTE_ANONYMITY  CHAR(1) DEFAULT 'N' CHECK(VOTE_ANONYMITY IN ('Y', 'N'))	NOT NULL
);

ALTER TABLE VOTE ADD CONSTRAINT PK_VOTE PRIMARY KEY (
	BOARD_NO
);

COMMENT ON COLUMN VOTE.VOTE_DUP IS 'Y는 제한없음';

COMMENT ON COLUMN VOTE.VOTE_ANONYMITY IS 'Y는 제한없음';

ALTER TABLE VOTE ADD (VOTE_DUP CHAR(1) DEFAULT 'Y' CHECK(VOTE_DUP IN ('Y', 'N', 2, 3, 4, 5))	NOT NULL);

ALTER TABLE VOTER ADD (VOTE_STATUS CHAR(1) DEFAULT 'Y' CHECK(VOTE_STATUS IN ('Y', 'N'))	NOT NULL);

ALTER TABLE BOARD DROP COLUMN BOARD_ETC; 


COMMIT;


----------------------- V_BOARD 생성-----------------
DROP VIEW V_BOARD;

CREATE VIEW V_BOARD AS
SELECT
BOARD_CONTENT,
BOARD_WRITE_DT,
BOARD_STATUS,
BOARD_LEVEL,
BOARD_NO,
STREET_NO,
M.MEMBER_NO,
TYPE_NO,
MAP_ADDR,
SKETCH_URL,
M.MEMBER_NICKNAME, 
M.MEMBER_PROFILE_URL

FROM BOARD B
INNER JOIN MEMBER M
ON B.MEMBER_NO = M.MEMBER_NO
ORDER BY BOARD_NO;

COMMIT;

---- 댓글 개수 조회용 ---
SELECT COUNT(*) AS REPLY_COUNT, BOARD_NO
FROM (SELECT * FROM REPLY WHERE REPLY_STATUS = 'Y' AND REPLY_LEVEL = 1)
GROUP BY BOARD_NO;

DROP VIEW V_REPLY_COUNT;

CREATE VIEW V_REPLY_COUNT AS
SELECT 
REPLY_COUNT,
A.BOARD_NO,
STREET_NO

FROM
(SELECT COUNT(*) AS REPLY_COUNT, BOARD_NO 
FROM (SELECT * FROM REPLY WHERE REPLY_STATUS = 'Y' AND REPLY_LEVEL = 1)
GROUP BY BOARD_NO) A
LEFT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;
---- 댓글 개수 조회용 ---


----대댓글  댓글 개수 조회용 ---
SELECT COUNT(*) AS REPLY_COUNT, REPLY_NO
FROM (SELECT * FROM REPLY WHERE REPLY_STATUS = 'Y' AND REPLY_LEVEL = 2)
GROUP BY REPLY_NO;

DROP VIEW V_REREPLY_COUNT;

CREATE VIEW V_REREPLY_COUNT AS
SELECT 
REPLY_COUNT,
A.BOARD_NO,
STREET_NO

FROM
(SELECT COUNT(*) AS REPLY_COUNT, BOARD_NO 
FROM (SELECT * FROM REPLY WHERE REPLY_STATUS = 'Y' AND REPLY_LEVEL = 2)
GROUP BY BOARD_NO) A
LEFT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;
----대댓글  댓글 개수 조회용 ---


----게시글 좋아요 조회용 -----
DROP VIEW V_THUMB_COUNT;

CREATE VIEW V_THUMB_COUNT AS
SELECT 
THUMB_COUNT,
A.BOARD_NO,
STREET_NO

FROM
(SELECT COUNT(*) AS THUMB_COUNT, BOARD_NO
FROM (SELECT * FROM THUMB WHERE THUMB_STATUS = 'Y' )
GROUP BY BOARD_NO) A
LEFT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;
----게시글 좋아요 조회용 -----

----댓글  좋아요 조회용 -----
DROP VIEW V_THUMB_COUNT;

CREATE VIEW V_THUMB_COUNT AS

SELECT 
THUMB_COUNT, A.BOARD_NO, STREET_NO

FROM
(SELECT COUNT(*) AS THUMB_COUNT, BOARD_NO
FROM (SELECT * FROM THUMB WHERE THUMB_STATUS = 'Y' )
GROUP BY BOARD_NO) A
LEFT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;


SELECT COUNT(*) AS THUMB_COUNT, REPLY_NO
FROM (SELECT * FROM THUMB WHERE THUMB_STATUS = 'Y' )
GROUP BY REPLY_NO;
----댓글 좋아요 조회용 -----

----대댓글  좋아요 조회용 -----
DROP VIEW V_THUMB_COUNT;

CREATE VIEW V_THUMB_COUNT AS

SELECT 
THUMB_COUNT, A.BOARD_NO, STREET_NO

FROM
(SELECT COUNT(*) AS THUMB_COUNT, BOARD_NO
FROM (SELECT * FROM THUMB WHERE THUMB_STATUS = 'Y' )
GROUP BY BOARD_NO) A
LEFT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;

SELECT COUNT(*) AS THUMB_COUNT, REPLY_NO
FROM (SELECT * FROM THUMB WHERE THUMB_STATUS = 'Y' )
GROUP BY REPLY_NO;
----대댓글 좋아요 조회용 -----

-------- 좋아요, 댓글 개수 조회용 view 생성 ------
SELECT 
THUMB_COUNT,
A.BOARD_NO,
STREET_NO

FROM
STREET S
RIGHT OUTER JOIN BOARD B
ON (A.BOARD_NO=B.BOARD_NO)
ORDER BY STREET_NO ;

COMMIT;

----------------------- V_BOARD 생성-----------------
CREATE VIEW V_BOARD AS
SELECT
BOARD_CONTENT,
BOARD_WRITE_DT,
BOARD_STATUS,
BOARD_LEVEL,
BOARD_NO,
STREET_NO,
M.MEMBER_NO,
TYPE_NO,
M.MEMBER_NICKNAME,
M.MEMBER_PROFILE_URL
FROM BOARD B
INNER JOIN MEMBER M
ON B.MEMBER_NO = M.MEMBER_NO
ORDER BY BOARD_NO;

COMMIT;

DROP VIEW V_BOARD;

----------------------- V_REPLY 생성-----------------
CREATE VIEW V_REPLY 
AS
SELECT
REPLY_NO,
REPLY_CONTENT,
REPLY_DT,
REPLY_STATUS,
REPLY_LEVEL,
R.BOARD_NO,
REREPLY_NO,
M.MEMBER_NO,
MEMBER_NICKNAME,
MEMBER_PROFILE_URL,
STREET_NO
FROM REPLY R
LEFT OUTER JOIN MEMBER M ON(M.MEMBER_NO=R.MEMBER_NO)
LEFT OUTER JOIN BOARD B ON(B.BOARD_NO=R.BOARD_NO)
ORDER BY BOARD_NO;

COMMIT;

DROP VIEW V_THUMB_COUNT;








DROP TABLE SKETCH;

CREATE TABLE SKETCH (
	BOARD_NO	NUMBER		NOT NULL,
	SKETCH_URL	VARCHAR2(300)		NOT NULL
);

COMMIT;


--  mybatis에서 insertALL 사용하기 위한 방법 
Create Sequence service_code_seq;
create or replace function get_seq( seq_name in varchar2 ) 
return  number is
  v_num number;
  sql_stmt varchar2(64);
begin
  sql_stmt := 'select ' || seq_name || '.nextval from dual';
  execute immediate sql_stmt into v_num;
  return v_num;
end;

 INSERT ALL 
  	 	 	
INTO VOTE_PICK (VOTE_NO, VOTE_CONTENT, BOARD_NO) VALUES (get_seq( 'service_code_seq' ), 1, 518)
INTO VOTE_PICK (VOTE_NO, VOTE_CONTENT, BOARD_NO) VALUES (get_seq( 'service_code_seq' ), 2, 518)
INTO VOTE_PICK (VOTE_NO, VOTE_CONTENT, BOARD_NO) VALUES (get_seq( 'service_code_seq' ), 3, 518)
INTO VOTE_PICK (VOTE_NO, VOTE_CONTENT, BOARD_NO) VALUES (get_seq( 'service_code_seq' ), 4, 518)
   select * from dual;

----------------------------------------



---------------------------------------- V_VOTE   VIEW 생성----------------------------------------
CREATE VIEW V_VOTE 
AS

SELECT
B.BOARD_NO,
STREET_NO,
TYPE_NO,
VOTE_TITLE,
VOTE_RESULT,
VOTE_ENROLL_DT,
VOTE_END_DT,
VOTE_DUP,
VOTE_ANONYMITY,
VOTE_CONTENT,
VOTE_NO


FROM ( SELECT BOARD_NO, STREET_NO, TYPE_NO  FROM BOARD WHERE TYPE_NO = 3 AND BOARD_STATUS = 'Y' AND STREET_NO=6 ) B

LEFT OUTER JOIN ( SELECT BOARD_NO, VOTE_TITLE,  VOTE_RESULT,  VOTE_ENROLL_DT,  VOTE_END_DT, VOTE_DUP,  VOTE_ANONYMITY 
                    FROM VOTE) V ON(B.BOARD_NO=V.BOARD_NO)

FULL OUTER JOIN (SELECT BOARD_NO, VOTE_CONTENT, VOTE_NO  FROM VOTE_PICK )P ON(B.BOARD_NO=P.BOARD_NO)

LEFT OUTER JOIN (SELECT VOTE_NO, VOTE_STATUS, MEMBER_NO  FROM VOTE_PICK )P ON(B.BOARD_NO=P.BOARD_NO)

ORDER BY BOARD_NO;

COMMIT;

DROP VIEW V_VOTE;


SELECT BOARD_NO, VOTE_CONTENT, VOTE_NO  FROM VOTE_PICK

SELECT VOTE_NO, VOTE_STATUS, MEMBER_NO  FROM VOTER

---------------------------------------- V_VOTE   VIEW 생성----------------------------------------
----------------------------------------투표 선택지 조회용----------------------------------------

SELECT

VOTE_NO,
VOTE_CONTENT
BOARD_NO,
VOTE_TITLE,
VOTE_RESULT,
VOTE_ENROLL_DT,
VOTE_END_DT,
VOTE_DUP,
VOTE_ANONYMITY,
STREET_NO,
MEMBER_NO,
VOTE_STATUS

FROM V_VOTE

LEFT OUTER JOIN (SELECT  VOTE_STATUS, MEMBER_NO, VOTE_NO

		FROM(SELECT BOARD_NO, VOTE_NO, VOTE_STATUS, MEMBER_NO  FROM VOTE_PICK
		     LEFT OUTER JOIN (SELECT VOTE_NO, VOTE_STATUS, MEMBER_NO  FROM VOTER WHERE MEMBER_NO=104 ) USING(VOTE_NO))

		) USING(VOTE_NO)
WHERE STREET_NO = 6
ORDER BY VOTE_NO;

---------------------------------------- 투표 선택지 조회용----------------------------------------

---------------------------------------- 1/N 회원 목록 조회용----------------------------------------
SELECT 
MEMBER_NO,
MEMBER_NICKNAME,
MEMBER_PROFILE_URL,
MEMBER_STATUS,
DIVIDE_DT


FROM MEMBER

LEFT OUTER JOIN ( SELECT MEMBER_NO, STREET_NO FROM STREET_JOIN WHERE STREET_NO = 5) USING(MEMBER_NO)

LEFT OUTER JOIN ( SELECT MEMBER_NO, DIVIDE_DT FROM DIVIDE ) USING(MEMBER_NO)

WHERE MEMBER_STATUS = 'Y'

ORDER BY MEMBER_NO;

---------------------------------------- 1/N 회원 목록 조회용----------------------------------------

