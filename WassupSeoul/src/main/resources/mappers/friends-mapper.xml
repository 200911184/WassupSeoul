<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="friendsMapper">

	<resultMap type="Relationship" id="RelationshipResultSet">
		<id property="myNum" column="MY_NO"/>
		<id property="yourNum" column="YOUR_NO"/>
		<result property="requestStatus" column="REQUEST_STATUS"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
   		<result property="memberEmail" column="MEMBER_EMAIL"/>
  		<result property="memberPwd" column="MEMBER_PWD"/>
  		<result property="memberNm" column="MEMBER_NM"/>
  		<result property="memberNickname" column="MEMBER_NICKNAME"/>
  		<result property="memberPhone" column="MEMBER_PHONE"/>
  		<result property="memberGender" column="MEMBER_GENDER"/>
  		<result property="memberAge" column="MEMBER_AGE"/>
  		<result property="memberProfileUrl" column="MEMBER_PROFILE_URL"/>
  		<result property="memberGrade" column="MEMBER_GRADE"/>
  		<result property="memberEnrollDt" column="MEMBER_ENROLL_DT"/>
  		<result property="memberStatus" column="MEMBER_STATUS"/>
	</resultMap>
	
	<resultMap type="ChatRoom" id="ChatRoomResultSet">
		<id property="chatNo" column="CHAT_NO"/>
   		<result property="chatStatus" column="CHAT_STATUS"/>
		<result property="myNo" column="MY_NO"/>
		<result property="yourNo" column="YOUR_NO"/>
	</resultMap>

	



<!-- 친구요청 조회용 1-->
<select id="friendsRequest" parameterType='_int' resultMap="RelationshipResultSet">
	SELECT * FROM RELATIONSHIP
	JOIN MEMBER ON(MY_NO = MEMBER_NO)
	WHERE YOUR_NO = #{myNum} 
	AND REQUEST_STATUS = 1
	AND MEMBER_STATUS = 'Y'
</select> 


<!-- 친구요청 조회용 2-->
<select id="justFriendsReq" parameterType='map' resultMap="memberResultSet">
	SELECT * FROM MEMBER
	JOIN RELATIONSHIP ON(MY_NO = MEMBER_NO)
	<where>
		AND YOUR_NO = #{myNum} 
		AND MEMBER_STATUS = 'Y'
		AND REQUEST_STATUS = 1
	</where>
</select>

<!-- 친구요청 (태훈)-->
 <insert id="addRelation" parameterType="Relationship">
 	INSERT INTO RELATIONSHIP
 	VALUES(#{myNum}, #{yourNum}, #{requestStatus})
 </insert>
 	<!--차단 당한 경우를 제외하는 코드 작성할 것 -->


<!-- 친구 추가 1--> 
 <update id="addFriend" parameterType="map">
 	UPDATE RELATIONSHIP SET
 	REQUEST_STATUS = 2
 	WHERE MY_NO = #{yourNo}
 	AND YOUR_NO = #{myNo}
 </update>
 
 <!-- 친구 추가 2  -->
 <insert id="addFriend2" parameterType="map">
 	INSERT INTO RELATIONSHIP
 	VALUES(#{myNo}, #{yourNo}, 2)
 </insert>
  
 <!-- 친구 요청 거절 -->
 <delete id="friendNo" parameterType="map">
 	DELETE FROM RELATIONSHIP
 	WHERE MY_NO = #{yourNo} 
 	AND YOUR_NO = #{myNo}
 	AND REQUEST_STATUS = 1
 </delete>
 
 <!-- 친구 차단 -->
 <insert id="blockFriend" parameterType="map">
 	INSERT INTO RELATIONSHIP
 	VALUES(#{yourNo}, #{myNo}, 3)
 </insert>
 
 
 <!-- 친구 목록 조회용 1 -->
 <select id="friendsList" parameterType="_int" resultMap="RelationshipResultSet">
 	SELECT * FROM RELATIONSHIP
 	JOIN MEMBER ON(MY_NO = MEMBER_NO)
 	WHERE MY_NO = #{myNum} <!-- 친구관계가 맺어지면 MY_NO와 YOUR_NO 칼럼 모두 각각의 번호가 들어간다 EX)15  26  2 /  26  15  2 --> 
	AND REQUEST_STATUS = 2
	AND MEMBER_STATUS = 'Y'
 </select>
 

 <!-- 친구 목록 조회용 2 -->
 <select id="justFriendsList" parameterType='map' resultMap="memberResultSet">
	SELECT * FROM MEMBER
	JOIN RELATIONSHIP ON(MY_NO = MEMBER_NO)
	<where> 
		AND YOUR_NO = #{myNum}
		AND MY_NO IN
		<foreach item="yourNo" collection="ffList" open="(" separator="," close=")">
			 #{yourNo}
		</foreach>
		AND MEMBER_STATUS = 'Y'
		AND REQUEST_STATUS = 2
	</where>
</select>


<!-- 친구목록에서의  친구 차단 1-->
<update id = "blockFriendInList" parameterType='map'>
	UPDATE RELATIONSHIP SET
 	REQUEST_STATUS = 3
 	WHERE MY_NO = #{myNo}
 	AND YOUR_NO = #{yourNo}
</update>

<!-- 친구목록에서의  친구 차단 2-->
<delete id = "blockFriendInList2" parameterType='map'>
	DELETE FROM RELATIONSHIP
	WHERE MY_NO = #{yourNo}
	AND YOUR_NO = #{myNo}
</delete>


<!--  <<<<<<<<<<<<<<<<<<<<대화방 진입 >>>>>>>>>>>>>>>>>    -->

<!-- 1단계 대화방 검색 -->
<select id = "selectChatRoom" parameterType='map' resultMap="ChatRoomResultSet">
	SELECT * FROM CHAT
	WHERE MY_NO = #{myNo}
	AND YOUR_NO = #{yourNo}
</select>


<!-- 2단계 대화방 개설 -->

<!-- 2.1) 방 번호 받기 -->
<select id = "getChatRoom" resultType="_int">
	SELECT SEQ_CHAT.NEXTVAL FROM DUAL 
</select> 

<!-- 2.2) 방 신설 하기 -->
<insert id = "insertChatRoom1" parameterType="map">
	INSERT INTO CHAT VALUES
	(#{chatNo}, DEFAULT, #{myNo}, #{yourNo})
</insert>

<insert id = "insertChatRoom2" parameterType="map">
	INSERT INTO CHAT VALUES
	(#{chatNo}, DEFAULT, #{yourNo}, #{myNo})
</insert>





<!-- 3단계 대화방 열기 -->
<update id = "updateChatRoom1" parameterType="map">
	UPDATE CHAT SET 
	CHAT_STATUS = 'Y'
	WHERE MY_NO = #{myNo}
	AND YOUR_NO = #{yourNo}	
</update>

<update id = "updateChatRoom2" parameterType="map">
	UPDATE CHAT SET 
	CHAT_STATUS = 'Y'
	WHERE MY_NO = #{yourNo}
	AND YOUR_NO = #{myNo}	
</update>



 
 

</mapper>
 