<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="streetMapper">
	
	<resultMap type="Street" id="streetResultSet">
		<id property="streetNo" column="STREET_NO"/>
		
		<result property="streetNm" column="STREET_NM"/>
		<result property="streetIntro" column="STREET_INTRO"/>
		<result property="streetStatus" column="STREET_STATUS"/>
		<result property="streetMaxMember" column="STREET_MAX_MEMBER"/> 
		<result property="streetPoint" column="STREET_POINT"/>
		<result property="imgNo" column="IMG_NO"/>
		<result property="districtNo" column="DISTRICT_NO"/>
		<result property="streetPublic" column="STREET_PUBLIC"/>
		<result property="imgUrl" column="IMG_URL"/>
	</resultMap>
	
	<resultMap type="StreetJoin" id="streetJoinResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
		
		<result property="streetNo" column="STREET_NO"/>
		<result property="citizenGrade" column="CITIZEN_GRADE"/>
		<result property="citizenStatus" column="CITIZEN_STATUS"/>
	</resultMap>
	
	
	<!--  Board -->
	<resultMap type="Board" id="boardResultSet">
		<id property="boardNo" column="BOARD_NO"/>
		
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardWriter" column="MEMBER_NICKNAME"/>
		<result property="boardWriteDt" column="BOARD_WRITE_DT"/>
		<result property="boardStatus" column="BOARD_STATUS"/>
		<result property="boardLevel" column="BOARD_LEVEL"/>
		<result property="streetNo" column="STREET_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="typeNo" column="TYPE_NO"/>
		<result property="memberProfile" column="MEMBER_PROFILE_URL"/>
		<result property="thumbStatus" column="THUMB_STATUS"/>
		<result property="thumbCount" column="THUMB_COUNT"/>
		<result property="replyCount" column="REPLY_COUNT"/>
	</resultMap>
		
	
	<resultMap type="Keyword" id="keywordResultSet">
		<id property="keywordNo" column="KEYWORD_NO"/>
		
		<result property="keywordContent" column="KEYWORD_CONTENT"/>
		<result property="streetNo" column="STREET_NO"/>
	</resultMap>
	
	
	<resultMap type="Member" id="memberResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
   		<result property="memberEmail" column="MEMBER_EMAIL"/>
  		<result property="memberPwd" column="MEMBER_PWD"/>
  		<result property="memberNm" column="MEMBER_NM"/>
  		<result property="memberNickname" column="MEMBER_NICKNAME"/>
  		<result property="memberPhone" column="MEMBER_PHONE"/>
  		<result property="memberGender" column="MEMBER_GENDER"/>
  		<result property="memberAge" column="MEMBER_AGE"/>
  		<result property="memberProfileUrl" column="MEMBER_PROFILE_URL"/>
  		<result property="memberGrade" column="MEMBER_GRADE"/>
  		<result property="memberEnrollDt" column="MEMBER_ENROLL_DT"/>
  		<result property="memberStatus" column="MEMBER_STATUS"/>
  		<result property="citizenStatus" column="CITIZEN_STATUS"/> <!-- 03/22 태훈 추가 -->
	</resultMap>
	
	
	<resultMap type="Hobby" id="hobbyResultSet">
		<id property="hobbyNo" column="HOBBY_NO"/>
		<result property="hobbyName" column="HOBBY_NM"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id property="replyNo" column="REPLY_NO"/>
   		<result property="replyContent" column="REPLY_CONTENT"/>
  		<result property="replyWriter" column="MEMBER_NICKNAME"/>
  		<result property="replyDt" column="REPLY_DT"/>
  		<result property="replyStatus" column="REPLY_STATUS"/>
  		<result property="replyLevel" column="REPLY_LEVEL"/>
  		<result property="memberNo" column="MEMBER_NO"/>
  		<result property="boardNo" column="BOARD_NO"/>
  		<result property="reReplyNo" column="REREPLY_NO"/>
  		<result property="memberProfile" column="MEMBER_PROFILE_URL"/>
  		<result property="streetNo" column="STREET_NO"/>
  		<result property="replyThumbCount" column="REPLY_THUMB_COUNT"/>
  		<result property="reReplyThumbCount" column="REREPLY_THUMB_COUNT"/>
  		<result property="reReplyCount" column="REREPLY_COUNT"/>
  		<result property="thumbStatus" column="THUMB_STATUS"/>  		
	</resultMap>
	
	<!--   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 시작ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    -->
	
	<resultMap type="Calendar" id="calendarResultSet">
		<id property="boardNo" column="BOARD_NO"/>
		<result property="calendarTitle" column="CALENDAR_TITLE"/>
		<result property="calendarContent" column="CALENDAR_CONTENT"/>
		<result property="calendarLocation" column="CALENDAR_LOCATION"/>
		<result property="calendarStartDate" column="CALENDAR_START_DT"/>
		<result property="calendarEndDate" column="CALENDAR_END_DT"/>
		<result property="calendarJoin" column="CALENDAR_JOIN"/>
		<result property="calendarJoinLimit" column="CALENDAR_JOIN_LIMIT"/>
		<result property="calendarJoinEndDate" column="CALENDAR_JOIN_END_DT"/>
		<result property="streetNo" column="STREET_NO"/>
	</resultMap>
	
	<!--   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 끝ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    -->
	
	
	<!-- 전체 골목 수 조회 -->
	<select id="getListCount" parameterType="map" resultType="_int">
		SELECT COUNT(DISTINCT(STREET_NO))
		FROM V_STREET
		<where>
			<if test="districtNo != null">
				AND DISTRICT_NO = #{districtNo}
			</if>
			<if test="searchStreet != null">
				AND (KEYWORD_CONTENT LIKE '%' || #{searchStreet} || '%'
				OR STREET_NM LIKE '%' || #{searchStreet} || '%')
			</if>
		</where>
	</select>
	
	<!-- 골목 리스트 조회 -->
	<select id="selectList" parameterType="map" resultMap="streetResultSet">
		SELECT STREET_NO, STREET_NM, STREET_MAX_MEMBER, STREET_POINT,
        		IMG_URL, STREET_STATUS, MEMBER_COUNT
		FROM V_STREET
		<where>
			<if test="districtNo != null">
				AND DISTRICT_NO = #{districtNo}
			</if>
			<if test="searchStreet != null">
				AND (KEYWORD_CONTENT LIKE '%' || #{searchStreet} || '%'
				OR STREET_NM LIKE '%' || #{searchStreet} || '%')
			</if>
		</where>
		GROUP BY STREET_NO, STREET_NM, STREET_MAX_MEMBER, STREET_POINT,
				IMG_URL, STREET_STATUS, MEMBER_COUNT
		<choose>
			<when test="streetSort == 0">
				ORDER BY STREET_POINT DESC
			</when>
			<when test="streetSort == 1">
				ORDER BY MEMBER_COUNT DESC
			</when>
			<when test="streetSort == 2">
				ORDER BY MEMBER_COUNT ASC
			</when>
			<otherwise>
				ORDER BY STREET_NO DESC
			</otherwise>
		</choose>
		
	</select>
	
	<!-- 골목 키워드 조회 -->
	<select id="selectKeywordList" parameterType="list" resultMap="keywordResultSet">
		SELECT *
		FROM KEYWORD
		WHERE STREET_NO IN
		<foreach collection="list" open="(" separator="," close=")" item="street" >
			#{street.streetNo}
		</foreach>
	</select>
	
	
	
	<!--   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ중하ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    -->
	
	<!-- 골목조회  -->
	<select id="selectStreet" parameterType="_int" resultMap="streetResultSet">
		SELECT *
		FROM STREET
		WHERE STREET_NO = #{streetNo}
	</select>
	
	<!-- 회원 골목 내 등급 조회  -->
	<select id="memGradeInSt" parameterType="reply" resultMap="streetJoinResultSet">
		SELECT MEMBER_NO,STREET_NO,CITIZEN_GRADE,CITIZEN_STATUS 
		FROM STREET_JOIN WHERE STREET_NO = #{streetNo} AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 골목 게시글 조회 -->  	 
  	 <select id="selectBoardList" parameterType="reply" resultMap="boardResultSet">
  	 	SELECT BOARD_CONTENT, BOARD_WRITE_DT, BOARD_STATUS, BOARD_LEVEL, BOARD_NO, STREET_NO, MEMBER_NO, TYPE_NO, MEMBER_NICKNAME, MEMBER_PROFILE_URL, 
		THUMB_STATUS, THUMB_COUNT, REPLY_COUNT
		
		FROM (SELECT BOARD_CONTENT,	BOARD_WRITE_DT,	BOARD_STATUS, BOARD_LEVEL, BOARD_NO, STREET_NO,	MEMBER_NO, TYPE_NO,	MEMBER_NICKNAME, MEMBER_PROFILE_URL 
			FROM V_BOARD WHERE STREET_NO = #{streetNo} AND BOARD_LEVEL = 0 AND BOARD_STATUS = 'Y'  )
			
		<!-- 골목대장일때  게시글 상단고정 기능 추가할것 -->
		
		<!-- 로그인회원 해당 게시글 좋아요 여부 체크 -->  
		LEFT OUTER JOIN ( SELECT THUMB_STATUS, BOARD_NO FROM THUMB WHERE MEMBER_NO = #{memberNo} AND REPLY_NO IS NULL  ) USING (BOARD_NO)
		<!-- 게시글 좋아요 개수 체크 -->
		LEFT OUTER JOIN ( SELECT COUNT(*) AS THUMB_COUNT, BOARD_NO FROM(SELECT * FROM V_BOARD LEFT OUTER JOIN THUMB USING (BOARD_NO)
						 WHERE THUMB_STATUS='Y'AND REPLY_NO IS NULL ) GROUP BY BOARD_NO ) USING (BOARD_NO)
		<!-- 게시글 댓글 개수체크 -->				 
		LEFT OUTER JOIN (SELECT COUNT(*) AS REPLY_COUNT, BOARD_NO FROM(SELECT * FROM V_BOARD LEFT OUTER JOIN REPLY USING (BOARD_NO)
						 WHERE REPLY_STATUS='Y' AND REPLY_LEVEL = 1) GROUP BY BOARD_NO) USING (BOARD_NO)
						 
		ORDER BY BOARD_NO
  	 </select>
  	
  	<!-- 게시글 등록용 -->
  	 <insert id="insertBoard" parameterType="Board">
		  INSERT INTO BOARD
		  VALUES(SEQ_BOARD.NEXTVAL, #{boardContent}, SYSDATE, 'Y', 0, #{streetNo}, #{memberNo}, #{typeNo} )
	</insert>
	
	<!-- 좋아요조회  -->
	<select id="likeCheck" parameterType="reply" resultType="string">
		SELECT THUMB_STATUS	FROM THUMB	WHERE MEMBER_NO = #{memberNo} AND BOARD_NO = #{boardNo} AND REPLY_NO IS NULL 
	</select>
	
	<!-- 좋아요 기록용  -->
	 <insert id="recordLike" parameterType="reply">
		  INSERT INTO THUMB  VALUES(SEQ_THUMB.NEXTVAL, 'Y', #{memberNo}, #{boardNo}, null)	  
	</insert>
	
	<!-- 좋아요 업데이트 -->
	<update id="updateLike"  parameterType="reply" >
		UPDATE THUMB SET THUMB_STATUS = #{thumbStatus}	WHERE MEMBER_NO=#{memberNo} AND BOARD_NO=#{boardNo}
	</update>
  	 
  	 <!-- 댓글 좋아요조회  -->
	<select id="replyLikeCheck" parameterType="reply" resultType="string">
		SELECT THUMB_STATUS	FROM THUMB	WHERE MEMBER_NO = #{memberNo} AND REPLY_NO = #{replyNo}
	</select>
	
  	 <!-- 댓글 좋아요 기록용  -->
	 <insert id="recordReplyLike" parameterType="reply">
		  INSERT INTO THUMB  VALUES(SEQ_THUMB.NEXTVAL, 'Y', #{memberNo}, #{boardNo}, #{replyNo})	  
	</insert>
	
	<!-- 댓글 좋아요 업데이트 -->
	<update id="updateReplyLike"  parameterType="reply" >
		UPDATE THUMB SET THUMB_STATUS = #{thumbStatus}	WHERE MEMBER_NO=#{memberNo} AND REPLY_NO=#{replyNo}
	</update>
  	 
  	  <!-- 대댓글 좋아요조회  -->
	<select id="reReplyLikeFunction" parameterType="reply" resultType="string">
		SELECT THUMB_STATUS	FROM THUMB	WHERE MEMBER_NO = #{memberNo} AND REPLY_NO = #{replyNo}
	</select>
	
	<!-- 대댓글 좋아요 기록용  -->
	 <insert id="recordReReplyLike" parameterType="reply">
		  INSERT INTO THUMB  VALUES(SEQ_THUMB.NEXTVAL, 'Y', #{memberNo}, #{boardNo}, #{replyNo})	  
	</insert>
  	 
  	 <!-- 댓글 좋아요 업데이트 -->
	<update id="updateReReplyLike"  parameterType="reply" >
		UPDATE THUMB SET THUMB_STATUS = #{thumbStatus}	WHERE MEMBER_NO=#{memberNo} AND REPLY_NO=#{replyNo}
	</update>
  	 
  	 
	 <!-- 게시글 삭제용 -->
  	 <update id="deletePost"  parameterType="_int" >
		UPDATE BOARD SET BOARD_STATUS = 'N'	WHERE BOARD_NO=#{boardNo}
	</update>
  	
  	<!-- 댓글 입력 -->
  	<insert id="writeComment" parameterType="reply">
  		INSERT INTO REPLY VALUES(SEQ_REPLY.NEXTVAL, #{replyContent}, SYSDATE, 'Y', 1, #{memberNo}, #{boardNo}, null )
  	</insert>
  	
  	<!-- 대댓글 입력 -->
  	<insert id="writeReComment" parameterType="reply">
  		INSERT INTO REPLY VALUES(SEQ_REPLY.NEXTVAL, #{replyContent}, SYSDATE, 'Y', 2, #{memberNo}, #{boardNo} , #{reReplyNo} )
  	</insert>
  	
	<!-- 댓글 조회용  -->
	<select id="selectReply" parameterType="Member" resultMap="replyResultSet">
  	 	SELECT REPLY_NO,REPLY_CONTENT,REPLY_DT,REPLY_STATUS,REPLY_LEVEL,BOARD_NO,REREPLY_NO,MEMBER_NO,MEMBER_NICKNAME,MEMBER_PROFILE_URL,STREET_NO,
				REPLY_THUMB_COUNT,REREPLY_THUMB_COUNT,REREPLY_COUNT,THUMB_STATUS
				
		FROM ( SELECT REPLY_NO,	REPLY_CONTENT,REPLY_DT,	REPLY_STATUS,REPLY_LEVEL,BOARD_NO,REREPLY_NO,MEMBER_NO,MEMBER_NICKNAME,MEMBER_PROFILE_URL,STREET_NO
				FROM V_REPLY WHERE REPLY_STATUS = 'Y' AND STREET_NO = #{streetNo})
				
		<!-- 로그인회원 해당 댓글,대댓글 좋아요 여부 체크 -->		
		LEFT OUTER JOIN ( SELECT THUMB_STATUS,REPLY_NO FROM THUMB WHERE MEMBER_NO = #{memberNo} AND REPLY_NO IS NOT NULL) USING (REPLY_NO)
		<!--  댓글 좋아요 개수 -->			
		LEFT OUTER JOIN ( SELECT COUNT(*) AS REPLY_THUMB_COUNT, REPLY_NO 
						FROM( SELECT * FROM V_REPLY LEFT OUTER JOIN THUMB USING (REPLY_NO) WHERE THUMB_STATUS='Y' AND REPLY_LEVEL = 1 ) GROUP BY REPLY_NO ) USING (REPLY_NO) 
		<!--  대댓글 개수 -->			
		LEFT OUTER JOIN (SELECT COUNT(*) AS REREPLY_COUNT, REREPLY_NO AS REPLY_NO
                    FROM(SELECT * FROM V_REPLY WHERE REPLY_STATUS='Y' AND REPLY_LEVEL=2) GROUP BY REREPLY_NO)  USING (REPLY_NO) 
		<!--  대댓글 좋아요 개수 -->							
		LEFT OUTER JOIN (SELECT COUNT(*) AS REREPLY_THUMB_COUNT, REPLY_NO 
						FROM(SELECT * FROM V_REPLY LEFT OUTER JOIN THUMB USING (REPLY_NO) WHERE THUMB_STATUS='Y' AND REPLY_LEVEL = 2) GROUP BY REPLY_NO) USING (REPLY_NO)
		
		ORDER BY REPLY_NO
  	</select>
  	
  	<!-- 지도 게시글 등록용  -->
  	<insert id="mapPost" parameterType="board">
  		INSERT INTO BOARD
		  VALUES(SEQ_BOARD.NEXTVAL, #{boardContent}, SYSDATE, 'Y', 0, #{streetNo}, #{memberNo}, #{typeNo})
  	</insert>
  	
  <!--  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 중하   끝  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
  	
  	
  	<!-- 골목 개설 조건 조회 1 -->
  	<select id="selectMyStreet" parameterType="_int" resultType="_int">
  		SELECT COUNT(*) FROM STREET_JOIN 
  		WHERE MEMBER_NO = #{memberNo}  		
  	</select>
  	
  	<!-- 골목 개설 조건 조회 2 -->
  	<select id="selectStreetMaster" parameterType="_int" resultType="_int">
  		SELECT COUNT(*) FROM STREET_JOIN 
  		WHERE MEMBER_NO = #{memberNo} AND CITIZEN_GRADE = 'M'  		
  	</select>
  	
  	<!-- 골목 커버 다음 번호 조회 -->
  	<select id="selectCoverNextNo" resultType="_int">
  		SELECT SEQ_STREET_IMG.NEXTVAL FROM DUAL 
  	</select>
  	
  	<!-- 골목 커버 정보 삽입 -->
	<insert id="insertStreetCover" parameterType="map">
  		INSERT INTO STREET_IMG
  		VALUES(#{imgNo}, #{changeCoverName}, 1)   
  	</insert> 
  	
  	<!-- 골목 다음 번호 조회 -->
  	<select id="selectStreetNextNo" resultType="_int">
  		SELECT SEQ_STREET.NEXTVAL FROM DUAL 
  	</select>  	
  	
  	<!-- 골목 정보 삽입 -->
  	<insert id="insertStreet" parameterType="street">
  		INSERT INTO STREET
  		VALUES(#{streetNo}, #{streetNm}, #{streetIntro}, 
  			   'Y', #{streetMaxMember}, DEFAULT, 
  			   #{imgNo}, #{districtNo}, #{streetPublic})    	
  	</insert>
  	 
  	 
  	<!-- 골목 대장 정보 삽입 -->
  	<insert id="insertStreetMaster" parameterType="map">
  		INSERT INTO STREET_JOIN
  		VALUES(#{memberNo}, #{streetNo}, 'M', 'Y')
  	</insert>
  	
  	<!-- 골목 키워드 삽입 -->
  	<insert id="insertStreetKeyword" parameterType="map">
  		INSERT INTO KEYWORD
  		VALUES(SEQ_KEYWORD.NEXTVAL, #{keyword}, #{streetNo}) 
  	</insert>
  	
  	
  	<!-- 주민 목록 조회 겸 추천 친구 목록 조회 (03/22 태훈 수정) -->
  	<select id="selectJuminList" parameterType="map" resultMap="memberResultSet">
		SELECT MEMBER_NO, MEMBER_NM, MEMBER_NICKNAME, MEMBER_GENDER, MEMBER_AGE, 
		        STREET_NO, COUNT(HOBBY_NO) HOBBY_COUNT, CITIZEN_STATUS, MEMBER_PROFILE_URL
		FROM MEMBER
		LEFT JOIN MEMBER_HOBBY USING(MEMBER_NO)
		LEFT JOIN HOBBY USING(HOBBY_NO)
		LEFT JOIN STREET_JOIN USING(MEMBER_NO)
		<where>
			<if test="myHobby != null">
				AND HOBBY_NM IN
				<foreach collection="myHobby" open="(" separator="," close=")" item="hobby">
					#{hobby.hobbyName}
				</foreach>
			</if>
			AND CITIZEN_STATUS IN
			<foreach collection="status" open="(" separator="," close=")" item="state">
				#{state}
			</foreach>
			AND STREET_NO = #{streetNo}
		</where>
		GROUP BY MEMBER_NO, MEMBER_NM, MEMBER_NICKNAME, MEMBER_GENDER,
				MEMBER_AGE, STREET_NO, CITIZEN_STATUS, MEMBER_PROFILE_URL
		<if test="myHobby != null">
			<!-- HAVING COUNT(HOBBY_NO) != 0 -->
			ORDER BY HOBBY_COUNT DESC
		</if>
  	</select>
  	
  	<!-- 로그인된 회원이 가입한 골목의 수 조회 -->
  	<select id="myStreetCount" parameterType="_int" resultType="_int">
  		SELECT COUNT(*)
  		FROM STREET_JOIN
  		WHERE MEMBER_NO = #{memberNo}
  		AND CITIZEN_STATUS = 'Y'
  	</select>
  	
  	<!-- 추천친구에 조회된 회원들의 관심사 목록 조회 -->
  	<select id="selectHobbyList" parameterType="list" resultMap="hobbyResultSet">
  		SELECT *
  		FROM HOBBY
  		JOIN MEMBER_HOBBY USING (HOBBY_NO)
		<if test="list != null">
  			<where>
  				AND MEMBER_NO IN
  				<foreach collection="list" open="(" separator="," close=")" item="member">
  					#{member.memberNo}
  				</foreach>
  			</where>
		</if>
	</select>
  
  	<!--ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ 태훈 시작 (03/22)ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ -->
  	<!-- 골목 가입신청 허가용 -->
  	<update id="joinCheck" parameterType="map">
  		UPDATE STREET_JOIN SET
  		CITIZEN_STATUS = 'Y'
  		WHERE MEMBER_NO = #{memberNo} AND STREET_NO = #{streetNo}
  	</update>
  	
  	<!-- 골목 가입신청 거절용 -->
  	<delete id="joinDelete" parameterType="map">
  		DELETE FROM STREET_JOIN
  		WHERE MEMBER_NO = #{memberNo} AND STREET_NO = #{streetNo}
  	</delete>
	
	<!-- 골목 가입용 -->
	<insert id="streetJoin" parameterType="map">
		INSERT INTO STREET_JOIN
		VALUES(#{memberNo}, #{streetNo}, 'G', 'W')
	</insert>
	
	<!-- 골목대장 번호 조회용 Service -->
	<select id="selectMasterNo" parameterType="_int" resultType="_int">
		SELECT MEMBER_NO FROM STREET_JOIN
		WHERE STREET_NO = #{streetNo} 
		AND CITIZEN_GRADE = 'M'
		AND CITIZEN_STATUS = 'Y'
	</select>
	
	
	<!-- 골목 이름 조회용 Service -->
	<select id="selectStreetNm" parameterType="_int" resultType="string">
		SELECT STREET_NM
		FROM STREET
		WHERE STREET_NO = #{streetNm}
	</select>
	
	<!--ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ 태훈 끝ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ -->
	
	<!--   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 시작ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    -->
  	
  	<!-- 현재 골목 주민수  -->
  	<select id="selectCitizenCount" parameterType="_int" resultType="_int">
  		SELECT COUNT(*) FROM STREET_JOIN
  		WHERE STREET_NO = #{streetNo} AND CITIZEN_STATUS = 'Y'
  	</select>
  	
  	<!-- 현재 골목 골목대장 조회 -->
  	<select id="selectStreetMasterNm" parameterType="_int" resultType="string">
  		SELECT MEMBER_NICKNAME FROM STREET
		JOIN STREET_JOIN USING(STREET_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE STREET_NO = #{streetNo} AND CITIZEN_GRADE='M' AND STREET_STATUS = 'Y'
  	</select>
  	
  	<!-- 내골목 키워드 조회 -->
	<select id="selectMyKeyword" parameterType="_int" resultMap="keywordResultSet">
		SELECT * FROM STREET
		JOIN KEYWORD USING(STREET_NO)
		WHERE STREET_NO = #{streetNo} 
	</select>
	
	<!-- 현재 골목 등급 조회 -->
	<select id="selectBadgeUrl" parameterType="Street" resultType="string">
		SELECT BADGE_URL FROM STREET_GRADE
		JOIN STREET ON (#{streetPoint} BETWEEN LOWEST_SCORE AND HIGHEST_SCORE)
		WHERE STREET_NO = #{streetNo}
	</select>
	
	<!-- 로그인 회원 골목 등급 조회 -->
	<select id="selectCitizenGrade" parameterType="hashmap" resultType="string">
		SELECT CITIZEN_GRADE FROM STREET_JOIN
		WHERE STREET_NO = #{streetNo} AND MEMBER_NO = #{memberNo} AND CITIZEN_STATUS = 'Y'
	</select>
	
	<!-- 골목 썸네일 조회 -->
	<select id="selectImgUrl" parameterType="_int" resultType="string">
		SELECT IMG_URL FROM STREET_IMG 
		WHERE IMG_NO = #{imgNo}
	</select>
	
	<!-- 게시판 번호 조회 -->
	<select id="selectBoardNo" resultType="_int">
		SELECT SEQ_BOARD.NEXTVAL FROM DUAL
	</select>
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 20.03.24ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	<!-- 일정 등록 -->
	<insert id="addSchedule" parameterType="Calendar">
		INSERT INTO CALENDAR
		<if test="calendarJoin == 'Y'">
			VALUES (#{boardNo},#{calendarTitle},#{calendarContent},#{calendarLocation},#{calendarStartDate},#{calendarEndDate},
			'Y',#{calendarJoinLimit},#{calendarJoinEndDate},#{streetNo})
		</if>
		<if test="calendarJoin == 'N'">
			VALUES (#{boardNo},#{calendarTitle},#{calendarContent},#{calendarLocation},#{calendarStartDate},#{calendarEndDate},
			'N',NULL,NULL,#{streetNo})
		</if>
	</insert>
	
	<!-- 일정 관련 게시글 등록 -->
	<insert id="insertCalendarBoard" parameterType="Board">
		INSERT INTO BOARD
		VALUES(#{boardNo}, #{boardContent}, SYSDATE, #{boardStatus}, 0, #{streetNo}, #{memberNo}, #{typeNo})		  
	</insert>
  	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 20.03.24ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
<!--   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ정승환 추가코드 끝ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    -->
	
	
	<!-- =========================미현 시작 3/23===================================== -->
	
	<insert id="fileUpload" parameterType="string">
		INSERT INTO BFILE VALUES(
			SEQ_BOARD.NEXTVAL, #{filepath}
		)
	</insert>
	
	
	<!-- 지원 골목 수정 시작 -->
	<!-- 수정 이미지 조회 -->
	<select id="selectImageUrl" parameterType="_int" resultType="string">
		SELECT IMG_URL FROM STREET_IMG 
		WHERE IMG_NO = #{imgNo}
	</select>
	
	<!-- 수정 키워드 조회 -->
	<select id="selectKeywords" parameterType="_int" resultMap="keywordResultSet">
		SELECT * FROM KEYWORD 
		WHERE STREET_NO = #{no}
	</select>
	
	<!-- 골목 수정 -->
	<update id="updateStreet" parameterType="Street">
		UPDATE STREET SET
		STREET_NM = #{streetNm},
		STREET_INTRO = #{streetIntro}, 
		STREET_MAX_MEMBER = #{streetMaxMember},
		IMG_NO = #{imgNo},
		DISTRICT_NO = #{districtNo},
		STREET_PUBLIC = #{streetPublic}
		WHERE STREET_NO = #{streetNo}
	</update>
	
	<!-- 키워드 삭제 -->
	<delete id="deleteStreetKeyword" parameterType="_int">
		DELETE FROM KEYWORD
		WHERE STREET_NO = #{streetNo}
	</delete>
	<!-- 지원 골목 수정 끝 -->
	
	
	<!-- ************************** 지원 골목 삭제 시작 ************************** -->
	<!-- 골목 삭제 -->
	<delete id="deleteStreet" parameterType="_int">
		DELETE FROM STREET
		WHERE STREET_NO = #{no}
	</delete>
	
	<!-- 골목 가입자 삭제 -->
	<delete id="deleteJoin" parameterType="_int">
		DELETE FROM STREET_JOIN
		WHERE STREET_NO = #{no}
	</delete>
	<!-- ************************** 지원 골목 삭제 끝 ************************** -->
	
	
</mapper>
